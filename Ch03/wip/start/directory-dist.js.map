{"version":3,"sources":["directory.js"],"names":["Person","props","person","name","title","img","bio","People","people","map","id","Filters","titles","window","LMDirectory","updateName","evt","updateFormState","target","value","updateTitle","updateIntern","checked","resetForm","currentName","currentTitle","key","display","isIntern","Directory","state","bind","val","setState","updatePeopleList","filteredPeople","filter","intern","toLowerCase","indexOf","title_cat","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","sourcesContent":["(function() {\n  \"use strict\";\n\n  function Person(props){\n    return (\n      <div className=\"person\">\n        <h3>\n          {props.person.name}, {props.person.title}\n        </h3>\n        <p>\n          <img className=\"size-medium alignright\"\n          src={props.person.img} alt={props.person.name} \n          width=\"300\" height=\"300\"  sizes=\"(max-width: 300px) 100vw, 300px\" />\n          {props.person.bio}\n        </p>\n      </div>\n    );\n  }\n\n  function People(props){\n    return (\n      <div className=\"results\">\n      <ReactTransitionGroup.TransitionGroup>\n        {props.people.map(function(person){\n          return (\n            <ReactTransitionGroup.CSSTransition key={person.id} classNames=\"fade\" timeout={20}>\n              <Person  person={person} />\n            </ReactTransitionGroup.CSSTransition>\n        );\n        })}  \n      </ReactTransitionGroup.TransitionGroup>\n      </div>\n    );\n  }\n\n  function Filters(props){\n\n    var titles = window.LMDirectory.titles;\n    \n    function updateName(evt){\n      props.updateFormState(\"currentName\",evt.target.value);\n    }\n\n    function updateTitle(evt){\n      props.updateFormState(\"currentTitle\",evt.target.value);\n    }\n\n    function updateIntern(evt){\n      props.updateFormState(\"isIntern\",evt.target.checked);\n    }\n\n    function resetForm(evt){\n      props.updateFormState(\"currentName\",\"\");\n      props.updateFormState(\"currentTitle\",\"\");\n      props.updateFormState(\"isIntern\",false);\n    }\n\n    return (\n      <form action=\"\" id=\"directory-filters\">\n        <div className=\"group\">\n          <label htmlFor=\"person-name\">Name:</label>\n          <input type=\"text\" \n          name=\"person_name\" \n          placeholder=\"Name of employee\" \n          id=\"person-name\"\n          value={props.currentName}\n          onChange={updateName}\n          />\n        </div>\n        <div className=\"group\">\n          <label htmlFor=\"person-title\">Job Title:</label>\n          <select name=\"person-title\" id=\"person-title\" value={props.currentTitle} onChange={updateTitle}>\n            <option value=\"\">- Select -</option>\n            {titles.map(function(title){\n              return (\n                <option value={title.key} key={title.key}>\n                  {title.display}\n                </option>\n              );\n            })}\n          </select>\n        </div>\n        <div className=\"group\">\n          <label><input type=\"checkbox\" value=\"1\" name=\"person_intern\" checked={props.isIntern}\n          onChange={updateIntern}/> Intern</label>\n        </div>\n        <div className=\"group\">\n          <input type=\"reset\" name=\"Reset\" value=\"Reset\" onClick={resetForm}/>\n        </div>\n      </form>\n    );\n  }\n\n  class Directory extends React.Component{\n    constructor(props){\n      super(props);\n\n      this.state = {\n        people: window.LMDirectory.people,\n        currentName: \"\",\n        currentTitle: \"\",\n        isIntern: false\n      };\n      this.updateFormState = this.updateFormState.bind(this);\n    }\n    \n    updateFormState(name,val){\n      this.setState(\n        {\n          [name]: val\n        }, \n        this.updatePeopleList\n      );\n    }\n\n      // search the whole employee list with current filters\n    updatePeopleList() {\n      var filteredPeople = window.LMDirectory.people.filter(\n        function(person) {\n          return (\n            person.intern === this.state.isIntern &&\n            (this.state.currentName === \"\" ||\n              person.name.toLowerCase().indexOf(this.state.currentName.toLowerCase()) !==\n                -1) &&\n            (this.state.currentTitle === \"\" || person.title_cat === this.state.currentTitle)\n          );\n        }.bind(this)\n      );\n\n      this.setState({\n        people: filteredPeople\n      });\n    }\n\n    render(){\n      return (\n        <div className=\"company-directory\">\n          <h2>\n            Company Directory\n          </h2>\n          <p>Learn more about each person at Leaf & Mortar in this company directory.</p>\n\n          <Filters \n            currentName={this.state.currentName} \n            currentTitle={this.state.currentTitle} \n            isIntern={this.state.isIntern} \n            updateFormState={this.updateFormState}\n          />\n\n          <People people={this.state.people}/>\n        </div>  \n      );\n    }\n  }\n\n  ReactDOM.render(<Directory />, document.getElementById('directory-root'));\n})();\n"]}